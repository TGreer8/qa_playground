import { Builder, Capabilities } from "selenium-webdriver";

import { EnterWantedPage } from "../enterWantedPage"

const chromedriver = require('chromedriver')
const driver = new Builder().withCapabilities(Capabilities.chrome()).build()

const myTest = new EnterWantedPage(driver, 'https://devmountain-qa.github.io/enter-wanted/1.4_Assignment/index.html')

test("Testing valid Header Input", async () => {
    await myTest.navigate()
    await myTest.setInput(myTest.hrdInput, "0123456789")
    await myTest.click(myTest.submit)
    let response = await myTest.getText(myTest.results)
    expect(response).not.toContain('The "Header" field should be between 9 and 19 characters long.')
})

test("Testing invalid MKE Input", async () => {
    await myTest.navigate()
    await myTest.setInput(myTest.MKE, "ABCDEFG")
    await myTest.click(myTest.submit)
    let response = await myTest.getText(myTest.results)
    expect(response).not.toContain('The "MKE" field can only include characters from the English Alphabet or special characters.')

})

test("Testing invalid OAI Input", async () =>{
    await myTest.navigate()
    await myTest.setInput(myTest.OAI, "123456789")
    await myTest.click(myTest.submit)
    let response = await myTest.getText(myTest.results)
    expect(response).not.toContain('The "Originating Agency Identifier" field should be 9 characters long.')
})

test("Testing invalid Name Input", async () =>{
    await myTest.navigate()
    await myTest.setInput(myTest.Name, "Tony")
    await myTest.click(myTest.submit)
    let response = await myTest.getText(myTest.results)
    expect(response).not.toContain('The field named "Name" must be included.')
})

test("Testing invalid Sex Input", async () =>{
    await myTest.navigate()
    await myTest.setInput(myTest.Sex, "M")
    await myTest.click(myTest.submit)
    let response = await myTest.getText(myTest.results)
    expect(response).not.toContain('The "Sex" field should be 1 character long')
})

test("Testing invalid Race Input", async () =>{
    await myTest.navigate()
    await myTest.setInput(myTest.Race, "C")
    await myTest.click(myTest.submit)
    let response = await myTest.getText(myTest.results)
    expect(response).not.toContain('The "Race" field should be 1 character long.')
})

test("Testing invalid Height Input", async () =>{
    await myTest.navigate()
    await myTest.setInput(myTest.Height, "508")
    await myTest.click(myTest.submit)
    let response = await myTest.getText(myTest.results)
    expect(response).not.toContain('The "Height" field should be 3 characters long.')
})

test("Testing invalid Weight Input", async () =>{
    await myTest.navigate()
    await myTest.setInput(myTest.Weight, "190")
    await myTest.click(myTest.submit)
    let response = await myTest.getText(myTest.results)
    expect(response).not.toContain('The field named "Weight" must be included.')
})
